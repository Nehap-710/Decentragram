{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Neha\\\\dvideo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Neha\\\\dvideo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Neha\\\\dvideo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Neha\\\\dvideo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Neha\\\\dvideo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Neha\\\\dvideo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Neha\\\\dvideo\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport DVideo from '../abis/DVideo.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport './App.css'; //Declare IPFS\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; //Load accounts\n                //Add first account the the state\n                //Get network ID\n                //Get network data\n                //Check if net data exists, then\n                //Assign dvideo contract to a variable\n                //Add dvideo to the state\n                //Check videoAmounts\n                //Add videAmounts to the state\n                //Iterate throught videos and add them to the state (by newest)\n                //Set latest video and it's title to view as default \n                //Set loading state to false\n                //If network data doesn't exisits, log error\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //Get video\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.captureFile = function (event) {};\n\n    _this.uploadVideo = function (title) {};\n\n    _this.changeVideo = function (hash, title) {};\n\n    _this.state = {\n      loading: false //set states\n\n    }; //Bind functions\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar //Account\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 59\n        }\n      }, \"Loading...\")) : /*#__PURE__*/React.createElement(Main //states&functions\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Neha/dvideo/src/components/App.js"],"names":["React","Component","DVideo","Navbar","Main","Web3","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","props","captureFile","event","uploadVideo","title","changeVideo","hash","state","loading"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP,C,CAEA;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGF,UAAU,CAAC;AAAEG,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,IAAhC;AAAsCC,EAAAA,QAAQ,EAAE;AAAhD,CAAD,CAAvB,C,CAAmF;;IAE7EC,G;;;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAIFC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIZ,IAAJ,CAASU,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAEH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIZ,IAAJ,CAASU,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAGA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I,EACpB;AACA;AAEA;AACA;AACA;AACE;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;QAGJ;;;;AAeA,eAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAdnBC,WAcmB,GAdL,UAAAC,KAAK,EAAI,CAEtB,CAYkB;;AAAA,UATnBC,WASmB,GATL,UAAAC,KAAK,EAAI,CAEtB,CAOkB;;AAAA,UAJnBC,WAImB,GAJL,UAACC,IAAD,EAAOF,KAAP,EAAiB,CAE9B,CAEkB;;AAEjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE,CAEX;;AAFW,KAAb,CAFiB,CAOjB;;AAPiB;AAQlB;;;;6BAEQ;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD,CACE;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAII,KAAKD,KAAL,CAAWC,OAAX,gBACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA9C,CADF,gBAEE,oBAAC,IAAD,CACE;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN,CADF;AAaD;;;;EAlFe5B,S;;AAqFlB,eAAeW,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport DVideo from '../abis/DVideo.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\n//Declare IPFS\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    //Load accounts\r\n    //Add first account the the state\r\n\r\n    //Get network ID\r\n    //Get network data\r\n    //Check if net data exists, then\r\n      //Assign dvideo contract to a variable\r\n      //Add dvideo to the state\r\n\r\n      //Check videoAmounts\r\n      //Add videAmounts to the state\r\n\r\n      //Iterate throught videos and add them to the state (by newest)\r\n\r\n\r\n      //Set latest video and it's title to view as default \r\n      //Set loading state to false\r\n\r\n      //If network data doesn't exisits, log error\r\n  }\r\n\r\n  //Get video\r\n  captureFile = event => {\r\n\r\n  }\r\n\r\n  //Upload video\r\n  uploadVideo = title => {\r\n\r\n  }\r\n\r\n  //Change Video\r\n  changeVideo = (hash, title) => {\r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false\r\n      //set states\r\n    }\r\n\r\n    //Bind functions\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar \r\n          //Account\r\n        />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n              //states&functions\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}